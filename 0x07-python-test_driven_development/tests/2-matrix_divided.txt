# 2-matrix_divided.py


Valid Matrix:
-------------

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix_divided([[1.0,2.0,3.0], [2.0, 4.0, 6.0]], 2.0)
[[0.5, 1.0, 1.5], [1.0, 2.0, 3.0]]

>>> matrix_divided([[1.1, -2.2, 3.3], [4.4, 5.5, -6.6]], 3)
[[0.37, -0.73, 1.1], [1.47, 1.83, -2.2]]


Invalid Matrix:
---------------

>>> matrix_divided([1,2,3], 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([1,2,3], "2")
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(["1",2,3], 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([1,2,3], None)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1,2,3], [2, 4]], 2)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[1,2,3], [2, 4, 6, 12]], 2)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[1,2], [2, 4, 6]], 2)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[1, 2, 3], [2, 4, 6]], 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero
